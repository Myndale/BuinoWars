const byte sprites[][8] PROGMEM = {
        {6, 6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {6, 6, 0x20, 0x50, 0x88, 0x00, 0x00, 0x00},
        {6, 6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {6, 6, 0x20, 0x50, 0x88, 0x70, 0x70, 0x70},
        {6, 6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {6, 6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {6, 6, 0x70, 0x70, 0x20, 0x70, 0x20, 0x50},
        {6, 6, 0x8c, 0x8c, 0xdc, 0x8c, 0xdc, 0xac},
        {6, 6, 0x00, 0x3c, 0x40, 0x98, 0xa0, 0xa4},
        {6, 6, 0x00, 0xfc, 0x00, 0xd8, 0x00, 0xfc},
        {6, 6, 0x00, 0xe0, 0x10, 0xc8, 0x28, 0x28},
        {6, 6, 0x00, 0xf8, 0x88, 0x88, 0xa8, 0xa8},
        {6, 6, 0x88, 0xac, 0xa0, 0x80, 0xa0, 0xac},
        {6, 6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {6, 6, 0x00, 0x08, 0x30, 0xfc, 0xfc, 0x78},
        {6, 6, 0xfc, 0xf4, 0xcc, 0x00, 0x00, 0x84},
        {6, 6, 0x88, 0xa8, 0xa8, 0x88, 0xa8, 0xa8},
        {6, 6, 0x00, 0xfc, 0x00, 0xd8, 0x00, 0x8c},
        {6, 6, 0x00, 0xfc, 0x80, 0x98, 0x80, 0xfc},
        {6, 6, 0x88, 0x8c, 0x20, 0x70, 0x20, 0x8c},
        {6, 6, 0x00, 0xf8, 0x08, 0xc8, 0x08, 0xf8},
        {6, 6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {6, 6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {6, 6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {6, 6, 0x88, 0xa4, 0xa0, 0x98, 0x40, 0x3c},
        {6, 6, 0x88, 0x8c, 0x00, 0xd8, 0x00, 0xfc},
        {6, 6, 0x88, 0x28, 0x28, 0xc8, 0x10, 0xe0},
        {6, 6, 0x88, 0xa8, 0xa8, 0x88, 0x88, 0xf8},
        {6, 6, 0x88, 0xa8, 0x28, 0x08, 0x28, 0xa8},
        {6, 6, 0x40, 0xb0, 0x0c, 0x20, 0xd8, 0x04},
        {6, 6, 0x6c, 0x10, 0x04, 0xc8, 0x30, 0x80},
        {6, 6, 0xc0, 0x08, 0xb4, 0x40, 0x10, 0x2c}
};

void drawSprite(int8_t x, int8_t y, const uint8_t sprite_num) {

  const uint8_t * bitmap = sprites[sprite_num] + 2;
  uint8_t i, j;
  uint8_t * screen_line = gb.display.getBuffer() + x;
  const int byteWidth = (SPRITE_SIZE + 7) >> 3;
  const uint8_t * bitmap_line = bitmap;

  uint8_t dsty = y;
  uint8_t mask = _BV(y & 7);
  for (j = 0; j < SPRITE_SIZE; j++, dsty++, bitmap_line+=byteWidth, mask = (mask & 0x80) ? 1 : (mask<<1))
  {
    int ofs = (dsty >> 3) * LCDWIDTH_NOROT;
    uint8_t dstx = x;
    const uint8_t * bitmap_src = bitmap_line;
    uint8_t * ptr = screen_line + ofs;    
    uint8_t pixels = pgm_read_byte(bitmap_src++);
    if (pixels & 0x80)
      ptr[0] |= mask;
    if (pixels & 0x40)
      ptr[1] |= mask;
    if (pixels & 0x20)
      ptr[2] |= mask;
    if (pixels & 0x10)
      ptr[3] |= mask;
    if (pixels & 0x08)
      ptr[4] |= mask;
    if (pixels & 0x04)
      ptr[5] |= mask;
  }
}

